{"version":3,"sources":["components/footer/footer.js","components/jumbotron/jumbotron.component.jsx","components/jumbotron-one/jumbotron.component.jsx","components/jumbotron-second/jumbotron.component.jsx","components/jumbotron-three/jumbotron.component.jsx","components/jumbotron-last/jumbotron.component.jsx","components/contact-us/contact.component.jsx","App.js","serviceWorker.js","index.js"],"names":["Footer","className","Container","Row","Col","sm","class","Component","JumboTwo","Jumbotron","id","xs","ContactForm","state","email","subject","message","handleChange","param","e","setState","target","value","preventDefault","emailjs","this","resetForm","alert","App","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","controller","console","log","onUpdate","onSuccess","catch","error","ReactDOM","render","document","getElementById","URL","process","href","origin","addEventListener","fetch","headers","response","contentType","get","status","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.4d1aeaa3.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport { Container, Row, Col } from 'reactstrap';\n\n\nexport default class Footer extends Component {\n\n    render() {\n\n\n        return (\n           \n                <div className=\"container\">\n                     <Container>\n      \n                        <Row>\n                            <Col sm=\"4\"></Col>\n                            <Col sm=\"4\">\n\n                                <hr />\n\n                                <div className=\"twelve columns\">        \n                                    <div class=\"widget\">\n                                        <h1 className=\"footer-text\">AM-Photography</h1>\n                                    </div>\n                                </div>\n\n                                <hr />\n                                \n                            </Col>\n                            <Col sm=\"4\"></Col>\n                        </Row>\n                        \n                        </Container>\n                    </div>\n       \n        );\n      }\n};","import React, { Component } from 'react';\nimport { Container, Row, Col, Jumbotron } from 'reactstrap';\n\nexport default class JumboTwo extends Component {\n\n    render() {\n\n\n        return (\n           \n            <Jumbotron id=\"about\" className=\"jumbotron-two\">\n            <Container>\n               \n               <Row>\n               <Col sm=\"4\">\n                <h1><span className=\"band\">Events Photography</span></h1>\n               </Col>\n               <Col xs=\"12\" sm=\"4\"></Col>\n               <Col sm=\"4\"></Col>\n               </Row>\n           \n           </Container>\n         </Jumbotron>\n       \n        );\n      }\n};","import React, { Component } from 'react';\nimport { Container, Row, Col, Jumbotron } from 'reactstrap';\n\nexport default class JumboTwo extends Component {\n\n    render() {\n\n\n        return (\n           \n            <Jumbotron id=\"about\" className=\"jumbotron-one\">\n            <Container>\n               \n               <Row>\n               <Col sm=\"4\">\n                <h1><span className=\"band\">Conceptual Photography</span></h1>\n               </Col>\n               <Col xs=\"12\" sm=\"4\"></Col>\n               <Col sm=\"4\"></Col>\n               </Row>\n           \n           </Container>\n         </Jumbotron>\n       \n        );\n      }\n};","import React, { Component } from 'react';\nimport { Container, Row, Col, Jumbotron } from 'reactstrap';\n\nexport default class JumboTwo extends Component {\n\n    render() {\n\n\n        return (\n           \n            <Jumbotron id=\"about\" className=\"jumbotron-second\">\n            <Container>\n               \n               <Row>\n               <Col sm=\"4\">\n                <h1><span className=\"band\">Video Shoot</span></h1>\n               </Col>\n               <Col xs=\"12\" sm=\"4\"></Col>\n               <Col sm=\"4\"></Col>\n               </Row>\n           \n           </Container>\n         </Jumbotron>\n       \n        );\n      }\n};","import React, { Component } from 'react';\nimport { Container, Row, Col, Jumbotron } from 'reactstrap';\n\nexport default class JumboTwo extends Component {\n\n    render() {\n\n\n        return (\n           \n            <Jumbotron id=\"about\" className=\"jumbotron-three\">\n            <Container>\n               \n               <Row>\n               <Col sm=\"4\">\n                <h1><span className=\"band\">Outdoor and Free-style Capture</span></h1>\n               </Col>\n               <Col xs=\"12\" sm=\"4\"></Col>\n               <Col sm=\"4\"></Col>\n               </Row>\n           \n           </Container>\n         </Jumbotron>\n       \n        );\n      }\n};","import React, { Component } from 'react';\nimport { Container, Row, Col, Jumbotron } from 'reactstrap';\n\nexport default class JumboTwo extends Component {\n\n    render() {\n\n\n        return (\n           \n            <Jumbotron id=\"about\" className=\"jumbotron-last\">\n            <Container>\n               \n               <Row>\n               <Col sm=\"4\">\n                <h1><span className=\"band\">About AM-Photography</span></h1>\n               </Col>\n               <Col xs=\"12\" sm=\"4\"></Col>\n               <Col sm=\"4\"></Col>\n               </Row>\n           \n           </Container>\n         </Jumbotron>\n       \n        );\n      }\n};","import React, { Component } from 'react';\nimport * as emailjs from 'emailjs-com';\n\nimport { Container } from 'reactstrap';\n\nclass ContactForm extends Component {\n    state = {\n        email: '',\n        subject: '',\n        message: ''\n    }\n\n    handleSubmit(e) {\n        e.preventDefault()\n\n\n        emailjs.send(\n            'gmail',\n            'contact_form',\n            'templateParams',\n            'user_DWOuhEd9UNjZKbOHm5NyC'\n        )\n\n        this.resetForm()\n        alert('Message Sent')\n    }\n\n    resetForm() {\n        this.setState({\n            \n        })\n        \n    }\n\n    handleChange = (param, e) => {\n        this.setState({ [param]: e.target.value })\n    }\n\n    render() {\n        return(\n            <div>\n                <Container id=\"contact\">\n                    <h1 className=\"h1\">Get in Touch</h1>\n                    <hr className=\"heading-horizon\" />\n                    <h3 className=\"insta\"> <span className=\"handle\">Instagram Handle: @ahsellmo</span></h3>\n                </Container>\n            </div>\n\n            \n        )\n    }\n}\n\nexport default ContactForm;\n\n","import React, { Component } from 'react';\n// import { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\nimport Footer from './components/footer/footer';\nimport JumboTwo from './components/jumbotron/jumbotron.component';\nimport JumboOne from './components/jumbotron-one/jumbotron.component';\nimport JumboSecond from './components/jumbotron-second/jumbotron.component';\nimport JumboThree from './components/jumbotron-three/jumbotron.component';\nimport JumboLast from './components/jumbotron-last/jumbotron.component';\nimport ContactForm from './components/contact-us/contact.component';\nimport './App.css';\n// import Navigation from \"./components/Navigation\"\nimport { Jumbotron } from 'reactstrap';\n\n\nclass App extends Component {\n  render() {\n    return (\n        <div className=\"App\">\n          {/* <Navigation /> */}\n          <Jumbotron id=\"about\" className=\"jumbotron\">\n              <h1 className=\"display-1 ase\">  ASELMO|MAFANGA</h1>\n              <h1 className=\"am\">  ASELMO</h1>\n              <h1 className=\"am\">  MAFANGA</h1>\n              <h1 className=\"display-3\"> Photography</h1>\n              <p className=\"lead\">OUTDOOR | NEW-BORN-ABY PHOTOSHOOT | PARTIES | VIDEOS | ORGANIZED | ECT.. </p>\n              <hr className=\"my-2\" />\n              <p className=\"para2\">Pride in photoshoot quality served for the viewer's aesthetics indulgement.</p>\n              <p className=\"lead\">\n                  {/* <Button color=\"primary\">Connect</Button> */}\n              </p>\n          </Jumbotron>\n          {/* <h1 className=\"display-1\">  EVENTS PHOTOGRAPHY</h1> */}\n          <p className=\"captions\">Set up a time and date of shooting.</p>\n          <JumboTwo />\n          <br />\n          <JumboOne />\n          <br />\n          <JumboSecond />\n          <br />\n          <JumboThree />\n          <br />\n          <JumboLast />\n          <br />\n          <ContactForm />\n          <br />\n          {/* <Spinner /> */}\n          <br />\n          <Footer />\n        </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { BrowserRouter } from 'react-router-dom';\nimport \"bootstrap/dist/css/bootstrap.min.css\";\n\nReactDOM.render(\n  <BrowserRouter>\n    <App />\n  </BrowserRouter>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.register();\n"],"sourceRoot":""}